<?php

namespace DoctrineProxies\__CG__;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Meeting extends \Meeting implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Meeting' . "\0" . 'type', '' . "\0" . 'Meeting' . "\0" . 'attachment');
        }

        return array('__isInitialized__', '' . "\0" . 'Meeting' . "\0" . 'type', '' . "\0" . 'Meeting' . "\0" . 'attachment');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Meeting $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAttachment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachment', array());

        return parent::getAttachment();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttachmentPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachmentPath', array());

        return parent::getAttachmentPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttachment($attachment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttachment', array($attachment));

        return parent::setAttachment($attachment);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getJsonData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJsonData', array());

        return parent::getJsonData();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTime', array());

        return parent::getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTimeICSFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTimeICSFormat', array());

        return parent::getStartTimeICSFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDateICSFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDateICSFormat', array());

        return parent::getStartDateICSFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', array());

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStart', array());

        return parent::getStart();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartSQL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartSQL', array());

        return parent::getStartSQL();
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', array());

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', array());

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function getDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDay', array());

        return parent::getDay();
    }

    /**
     * {@inheritDoc}
     */
    public function getHour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHour', array());

        return parent::getHour();
    }

    /**
     * {@inheritDoc}
     */
    public function getMinute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinute', array());

        return parent::getMinute();
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekDay', array());

        return parent::getWeekDay();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndSQL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndSQL', array());

        return parent::getEndSQL();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTime', array());

        return parent::getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTimeICSFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTimeICSFormat', array());

        return parent::getEndTimeICSFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDateICSFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDateICSFormat', array());

        return parent::getEndDateICSFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', array());

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnd', array());

        return parent::getEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartEnd', array());

        return parent::getStartEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setStart(\DateTime $startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStart', array($startDate));

        return parent::setStart($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnd(\DateTime $endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnd', array($endDate));

        return parent::setEnd($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function inFutur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'inFutur', array());

        return parent::inFutur();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocation', array());

        return parent::getLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocation(\Location $location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocation', array($location));

        return parent::setLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponsible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponsible', array());

        return parent::getResponsible();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponsible(\Member $responsible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponsible', array($responsible));

        return parent::setResponsible($responsible);
    }

}
